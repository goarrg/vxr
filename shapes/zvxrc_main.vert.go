// go run goarrg.com/rhi/vxr/cmd/vxrc -id-prefix=vxr/shapes/ -dir=./ -generator=go -skip-metadata -O -Os -strip main.vert 
// Code generated by the command above; DO NOT EDIT.

package shapes

import(
	"goarrg.com/rhi/vxr"
)

func vxrcLoad_main_vert() (spv *vxr.Shader, layout *vxr.ShaderLayout) {
	spv = &vxr.Shader{ID:"vxr/shapes/main.vert", SPIRV:[]uint32{0x7230203, 0x10600, 0xd000b, 0x79, 0x0, 0x20011, 0x1, 0x6000b, 0x1, 0x4c534c47, 0x6474732e, 0x3035342e, 0x0, 0x3000e, 0x0, 0x1, 0xb000f, 0x0, 0x4, 0x6e69616d, 0x0, 0xb, 0x20, 0x2f, 0x38, 0x3c, 0x49, 0x40047, 0xb, 0xb, 0x2a, 0x40047, 0x1b, 0x6, 0x8, 0x50048, 0x1c, 0x0, 0x23, 0x0, 0x50048, 0x1c, 0x1, 0x23, 0x4, 0x40047, 0x1d, 0x6, 0x1c, 0x30047, 0x1e, 0x2, 0x40048, 0x1e, 0x0, 0x13, 0x40048, 0x1e, 0x0, 0x18, 0x50048, 0x1e, 0x0, 0x23, 0x0, 0x30047, 0x20, 0x13, 0x30047, 0x20, 0x18, 0x40047, 0x20, 0x21, 0x1, 0x40047, 0x20, 0x22, 0x0, 0x50048, 0x2b, 0x0, 0x23, 0x0, 0x50048, 0x2b, 0x1, 0x23, 0x4, 0x50048, 0x2b, 0x2, 0x23, 0x8, 0x50048, 0x2b, 0x3, 0x23, 0xc, 0x50048, 0x2b, 0x4, 0x23, 0x10, 0x50048, 0x2b, 0x5, 0x23, 0x14, 0x40048, 0x2b, 0x6, 0x4, 0x50048, 0x2b, 0x6, 0x7, 0xc, 0x50048, 0x2b, 0x6, 0x23, 0x18, 0x40047, 0x2c, 0x6, 0x30, 0x30047, 0x2d, 0x2, 0x40048, 0x2d, 0x0, 0x13, 0x40048, 0x2d, 0x0, 0x18, 0x50048, 0x2d, 0x0, 0x23, 0x0, 0x40048, 0x2d, 0x1, 0x13, 0x40048, 0x2d, 0x1, 0x18, 0x50048, 0x2d, 0x1, 0x23, 0x4, 0x30047, 0x2f, 0x13, 0x30047, 0x2f, 0x18, 0x40047, 0x2f, 0x21, 0x0, 0x40047, 0x2f, 0x22, 0x0, 0x30047, 0x38, 0xe, 0x40047, 0x38, 0x1e, 0x0, 0x40047, 0x3c, 0x1e, 0x1, 0x30047, 0x47, 0x2, 0x50048, 0x47, 0x0, 0xb, 0x0, 0x50048, 0x47, 0x1, 0xb, 0x1, 0x50048, 0x47, 0x2, 0xb, 0x3, 0x50048, 0x47, 0x3, 0xb, 0x4, 0x20013, 0x2, 0x30021, 0x3, 0x2, 0x40015, 0x6, 0x20, 0x0, 0x40015, 0x9, 0x20, 0x1, 0x40020, 0xa, 0x1, 0x9, 0x4003b, 0xa, 0xb, 0x1, 0x4002b, 0x9, 0xd, 0x3, 0x30016, 0x14, 0x20, 0x40017, 0x15, 0x14, 0x2, 0x4002b, 0x6, 0x16, 0x3, 0x4001c, 0x17, 0x15, 0x16, 0x4001e, 0x18, 0x6, 0x17, 0x4001c, 0x1b, 0x15, 0x16, 0x4001e, 0x1c, 0x6, 0x1b, 0x3001d, 0x1d, 0x1c, 0x3001e, 0x1e, 0x1d, 0x40020, 0x1f, 0xc, 0x1e, 0x4003b, 0x1f, 0x20, 0xc, 0x4002b, 0x9, 0x21, 0x0, 0x40020, 0x23, 0xc, 0x1c, 0x40018, 0x27, 0x15, 0x3, 0x9001e, 0x28, 0x6, 0x6, 0x6, 0x6, 0x14, 0x6, 0x27, 0x9001e, 0x2b, 0x6, 0x6, 0x6, 0x6, 0x14, 0x6, 0x27, 0x3001d, 0x2c, 0x2b, 0x4001e, 0x2d, 0x6, 0x2c, 0x40020, 0x2e, 0xc, 0x2d, 0x4003b, 0x2e, 0x2f, 0xc, 0x4002b, 0x9, 0x30, 0x1, 0x40020, 0x33, 0xc, 0x2b, 0x40020, 0x37, 0x3, 0x6, 0x4003b, 0x37, 0x38, 0x3, 0x40020, 0x3b, 0x3, 0x15, 0x4003b, 0x3b, 0x3c, 0x3, 0x4002b, 0x14, 0x41, 0x3f000000, 0x5002c, 0x15, 0x42, 0x41, 0x41, 0x40017, 0x44, 0x14, 0x4, 0x4002b, 0x6, 0x45, 0x1, 0x4001c, 0x46, 0x14, 0x45, 0x6001e, 0x47, 0x44, 0x14, 0x46, 0x46, 0x40020, 0x48, 0x3, 0x47, 0x4003b, 0x48, 0x49, 0x3, 0x4002b, 0x14, 0x4a, 0xbf800000, 0x4002b, 0x14, 0x4b, 0x0, 0x7002c, 0x44, 0x4c, 0x4a, 0x4a, 0x4b, 0x4b, 0x4002b, 0x14, 0x54, 0x3f800000, 0x40017, 0x55, 0x14, 0x3, 0x40020, 0x5e, 0xc, 0x6, 0x40020, 0x67, 0x3, 0x44, 0x40020, 0x76, 0xc, 0x1b, 0x40020, 0x77, 0xc, 0x15, 0x50036, 0x2, 0x4, 0x0, 0x3, 0x200f8, 0x5, 0x4003d, 0x9, 0xc, 0xb, 0x50087, 0x9, 0xe, 0xc, 0xd, 0x4007c, 0x6, 0xf, 0xe, 0x5008b, 0x9, 0x12, 0xc, 0xd, 0x4007c, 0x6, 0x13, 0x12, 0x60041, 0x23, 0x24, 0x20, 0x21, 0xf, 0x4003d, 0x1c, 0x25, 0x24, 0x40190, 0x18, 0x26, 0x25, 0x50051, 0x6, 0x6c, 0x26, 0x0, 0x70041, 0x76, 0x78, 0x20, 0x21, 0xf, 0x45, 0x60041, 0x33, 0x34, 0x2f, 0x30, 0x6c, 0x4003d, 0x2b, 0x35, 0x34, 0x40190, 0x28, 0x36, 0x35, 0x50051, 0x6, 0x74, 0x36, 0x3, 0x50051, 0x27, 0x75, 0x36, 0x6, 0x3003e, 0x38, 0x6c, 0x50041, 0x77, 0x6e, 0x78, 0x13, 0x4003d, 0x15, 0x40, 0x6e, 0x50081, 0x15, 0x43, 0x40, 0x42, 0x3003e, 0x3c, 0x43, 0x50051, 0x14, 0x56, 0x40, 0x0, 0x50051, 0x14, 0x57, 0x40, 0x1, 0x60050, 0x55, 0x58, 0x56, 0x57, 0x54, 0x50091, 0x15, 0x59, 0x75, 0x58, 0x50080, 0x6, 0x5c, 0x74, 0x45, 0x40070, 0x14, 0x5d, 0x5c, 0x50041, 0x5e, 0x5f, 0x2f, 0x21, 0x4003d, 0x6, 0x60, 0x5f, 0x40070, 0x14, 0x61, 0x60, 0x50088, 0x14, 0x62, 0x5d, 0x61, 0x50051, 0x14, 0x63, 0x59, 0x0, 0x50051, 0x14, 0x64, 0x59, 0x1, 0x70050, 0x44, 0x65, 0x63, 0x64, 0x62, 0x54, 0x50081, 0x44, 0x66, 0x4c, 0x65, 0x50041, 0x67, 0x68, 0x49, 0x21, 0x3003e, 0x68, 0x66, 0x100fd, 0x10038}}
	layout = &vxr.ShaderLayout{EntryPoints:map[string]vxr.ShaderEntryPointLayout{"main":vxr.ShaderEntryPointVertexLayout{Name:"main"}}, PushConstants:struct { Offset uint32; Size uint32 }{Offset:0x0, Size:0x0}, DescriptorSetLayouts:[][]struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{[]struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{DescriptorType:0x7, DescriptorCount:vxr.ShaderConstant{Value:0x1, IsSpecConstant:false}}, struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{DescriptorType:0x7, DescriptorCount:vxr.ShaderConstant{Value:0x1, IsSpecConstant:false}}}}}
	return
}
