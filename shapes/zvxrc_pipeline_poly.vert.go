// go run goarrg.com/rhi/vxr/cmd/vxrc -id-prefix=vxr/shapes/ -dir=./ -generator=go -O -Os -strip pipeline_poly.vert 
// Code generated by the command above; DO NOT EDIT.

package shapes

import(
	"goarrg.com/rhi/vxr"
)

func vxrcLoad_pipeline_poly_vert() (spv *vxr.Shader, layout *vxr.ShaderLayout, meta *vxr.ShaderMetadata) {
	spv = &vxr.Shader{ID:"vxr/shapes/pipeline_poly.vert", SPIRV:[]uint32{0x7230203, 0x10600, 0xd000b, 0x158, 0x0, 0x20011, 0x1, 0x6000b, 0x1, 0x4c534c47, 0x6474732e, 0x3035342e, 0x0, 0x3000e, 0x0, 0x1, 0xb000f, 0x0, 0x4, 0x6e69616d, 0x0, 0x8, 0xb, 0x18, 0x2c, 0x37, 0x46, 0x30047, 0x8, 0xe, 0x40047, 0x8, 0x1e, 0x0, 0x40047, 0xb, 0xb, 0x2b, 0x50048, 0x14, 0x0, 0x23, 0x0, 0x40048, 0x14, 0x1, 0x4, 0x50048, 0x14, 0x1, 0x7, 0xc, 0x50048, 0x14, 0x1, 0x23, 0x4, 0x40047, 0x15, 0x6, 0x1c, 0x30047, 0x16, 0x2, 0x40048, 0x16, 0x0, 0x13, 0x40048, 0x16, 0x0, 0x18, 0x50048, 0x16, 0x0, 0x23, 0x0, 0x30047, 0x18, 0x13, 0x30047, 0x18, 0x18, 0x40047, 0x18, 0x21, 0x0, 0x40047, 0x18, 0x22, 0x0, 0x40047, 0x1f, 0x1, 0x0, 0x40047, 0x25, 0x1, 0x1, 0x40047, 0x2c, 0x1e, 0x1, 0x40047, 0x37, 0xb, 0x2a, 0x30047, 0x3a, 0x18, 0x30047, 0x44, 0x2, 0x50048, 0x44, 0x0, 0xb, 0x0, 0x50048, 0x44, 0x1, 0xb, 0x1, 0x50048, 0x44, 0x2, 0xb, 0x3, 0x50048, 0x44, 0x3, 0xb, 0x4, 0x30047, 0x4e, 0x18, 0x30047, 0x6e, 0x18, 0x30047, 0x75, 0x18, 0x30047, 0x89, 0x18, 0x30047, 0x90, 0x18, 0x30047, 0xa1, 0x18, 0x30047, 0xa8, 0x18, 0x20013, 0x2, 0x30021, 0x3, 0x2, 0x40015, 0x6, 0x20, 0x0, 0x40020, 0x7, 0x3, 0x6, 0x4003b, 0x7, 0x8, 0x3, 0x40015, 0x9, 0x20, 0x1, 0x40020, 0xa, 0x1, 0x9, 0x4003b, 0xa, 0xb, 0x1, 0x30016, 0xe, 0x20, 0x40017, 0xf, 0xe, 0x2, 0x40018, 0x10, 0xf, 0x3, 0x4001e, 0x11, 0xe, 0x10, 0x4001e, 0x14, 0xe, 0x10, 0x3001d, 0x15, 0x14, 0x3001e, 0x16, 0x15, 0x40020, 0x17, 0xc, 0x16, 0x4003b, 0x17, 0x18, 0xc, 0x4002b, 0x9, 0x19, 0x0, 0x40020, 0x1b, 0xc, 0x14, 0x40032, 0x6, 0x1f, 0x0, 0x4002b, 0x6, 0x20, 0x7fffffff, 0x60034, 0x6, 0x21, 0xc7, 0x1f, 0x20, 0x40032, 0x6, 0x25, 0x1, 0x4002b, 0x6, 0x26, 0x3, 0x20014, 0x27, 0x60034, 0x27, 0x28, 0xaa, 0x25, 0x26, 0x40020, 0x2b, 0x3, 0xf, 0x4003b, 0x2b, 0x2c, 0x3, 0x4001c, 0x2d, 0xf, 0x26, 0x4002b, 0xe, 0x2e, 0x0, 0x4002b, 0xe, 0x2f, 0xbf000000, 0x5002c, 0xf, 0x30, 0x2e, 0x2f, 0x4002b, 0xe, 0x31, 0x3eddb37d, 0x4002b, 0xe, 0x32, 0x3e800000, 0x5002c, 0xf, 0x33, 0x31, 0x32, 0x4002b, 0xe, 0x34, 0xbeddb37d, 0x5002c, 0xf, 0x35, 0x34, 0x32, 0x6002c, 0x2d, 0x36, 0x30, 0x33, 0x35, 0x4003b, 0xa, 0x37, 0x1, 0x40020, 0x39, 0x7, 0x2d, 0x40020, 0x3b, 0x7, 0xf, 0x4002b, 0xe, 0x3e, 0x3f000000, 0x5002c, 0xf, 0x3f, 0x3e, 0x3e, 0x40017, 0x41, 0xe, 0x4, 0x4002b, 0x6, 0x42, 0x1, 0x4001c, 0x43, 0xe, 0x42, 0x6001e, 0x44, 0x41, 0xe, 0x43, 0x43, 0x40020, 0x45, 0x3, 0x44, 0x4003b, 0x45, 0x46, 0x3, 0x4002b, 0xe, 0x47, 0xbf800000, 0x7002c, 0x41, 0x48, 0x47, 0x47, 0x2e, 0x2e, 0x4002b, 0xe, 0x51, 0x3f800000, 0x40017, 0x52, 0xe, 0x3, 0x40020, 0x5b, 0x3, 0x41, 0x4002b, 0x6, 0x5f, 0x4, 0x60034, 0x27, 0x60, 0xaa, 0x25, 0x5f, 0x4002b, 0x6, 0x63, 0x6, 0x4001c, 0x64, 0xf, 0x63, 0x4002b, 0xe, 0x65, 0xbeb504f3, 0x5002c, 0xf, 0x66, 0x65, 0x65, 0x4002b, 0xe, 0x67, 0x3eb504f3, 0x5002c, 0xf, 0x68, 0x67, 0x65, 0x5002c, 0xf, 0x69, 0x67, 0x67, 0x5002c, 0xf, 0x6a, 0x65, 0x67, 0x9002c, 0x64, 0x6b, 0x66, 0x68, 0x69, 0x69, 0x6a, 0x66, 0x40020, 0x6d, 0x7, 0x64, 0x5002c, 0xf, 0x86, 0x2f, 0x3e, 0x6002c, 0x2d, 0x87, 0x30, 0x3f, 0x86, 0x5002c, 0xf, 0x9d, 0x2f, 0x2f, 0x5002c, 0xf, 0x9e, 0x3e, 0x2f, 0x9002c, 0x64, 0x9f, 0x9d, 0x9e, 0x3f, 0x3f, 0x86, 0x9d, 0x4002b, 0x9, 0xb8, 0x3, 0x4002b, 0xe, 0xbd, 0x40c90fdb, 0x5002c, 0xf, 0xdb, 0x2e, 0x2e, 0x4002b, 0x9, 0xf7, 0x6, 0x4002b, 0x6, 0x149, 0x0, 0x3002a, 0x27, 0x14a, 0x30029, 0x27, 0x14d, 0x50036, 0x2, 0x4, 0x0, 0x3, 0x200f8, 0x5, 0x5003b, 0x39, 0x3a, 0x7, 0x36, 0x5003b, 0x39, 0x4e, 0x7, 0x36, 0x5003b, 0x6d, 0x6e, 0x7, 0x6b, 0x5003b, 0x6d, 0x75, 0x7, 0x6b, 0x5003b, 0x39, 0x89, 0x7, 0x87, 0x5003b, 0x39, 0x90, 0x7, 0x87, 0x5003b, 0x6d, 0xa1, 0x7, 0x9f, 0x5003b, 0x6d, 0xa8, 0x7, 0x9f, 0x4003b, 0x39, 0xda, 0x7, 0x4003b, 0x6d, 0x12c, 0x7, 0x300f7, 0x147, 0x0, 0x300fb, 0x149, 0x148, 0x200f8, 0x148, 0x4003d, 0x9, 0xc, 0xb, 0x4007c, 0x6, 0xd, 0xc, 0x3003e, 0x8, 0xd, 0x60041, 0x1b, 0x1c, 0x18, 0x19, 0xc, 0x4003d, 0x14, 0x1d, 0x1c, 0x40190, 0x11, 0x1e, 0x1d, 0x50051, 0xe, 0x154, 0x1e, 0x0, 0x50051, 0x10, 0x155, 0x1e, 0x1, 0x300f7, 0x24, 0x0, 0x700fb, 0x21, 0x24, 0x0, 0x22, 0x1, 0x23, 0x200f8, 0x23, 0x4003d, 0x9, 0xf6, 0x37, 0x50087, 0x9, 0xf8, 0xf6, 0xf7, 0x4007c, 0x6, 0xf9, 0xf8, 0x40070, 0xe, 0xfc, 0xf9, 0x50083, 0xe, 0xfd, 0xfc, 0x3e, 0x40070, 0xe, 0xfe, 0x25, 0x50088, 0xe, 0xff, 0xfd, 0xfe, 0x50085, 0xe, 0x100, 0xbd, 0xff, 0x6000c, 0xe, 0x103, 0x1, 0xd, 0x100, 0x6000c, 0xe, 0x105, 0x1, 0xe, 0x100, 0x4007f, 0xe, 0x106, 0x105, 0x50050, 0xf, 0x107, 0x103, 0x106, 0x50085, 0xe, 0x10a, 0x3e, 0x154, 0x5008e, 0xf, 0x10b, 0x107, 0x10a, 0x50081, 0xe, 0x10f, 0xfc, 0x3e, 0x50085, 0xe, 0x110, 0xbd, 0x10f, 0x50088, 0xe, 0x112, 0x110, 0xfe, 0x6000c, 0xe, 0x115, 0x1, 0xd, 0x112, 0x6000c, 0xe, 0x117, 0x1, 0xe, 0x112, 0x4007f, 0xe, 0x118, 0x117, 0x50050, 0xf, 0x119, 0x115, 0x118, 0x5008e, 0xf, 0x11d, 0x119, 0x10a, 0x50088, 0xe, 0x122, 0xfc, 0xfe, 0x50085, 0xe, 0x123, 0xbd, 0x122, 0x6000c, 0xe, 0x126, 0x1, 0xd, 0x123, 0x6000c, 0xe, 0x128, 0x1, 0xe, 0x123, 0x4007f, 0xe, 0x129, 0x128, 0x50050, 0xf, 0x12a, 0x126, 0x129, 0x5008e, 0xf, 0x12b, 0x12a, 0x3e, 0x90050, 0x64, 0x131, 0xdb, 0x10b, 0x11d, 0x11d, 0x10b, 0x12b, 0x3003e, 0x12c, 0x131, 0x5008b, 0x9, 0x133, 0xf6, 0xf7, 0x50041, 0x3b, 0x134, 0x12c, 0x133, 0x4003d, 0xf, 0x135, 0x134, 0x50081, 0xf, 0x136, 0x135, 0x3f, 0x3003e, 0x2c, 0x136, 0x4003d, 0xf, 0x13c, 0x134, 0x50051, 0xe, 0x13d, 0x13c, 0x0, 0x50051, 0xe, 0x13e, 0x13c, 0x1, 0x60050, 0x52, 0x13f, 0x13d, 0x13e, 0x51, 0x50091, 0xf, 0x140, 0x155, 0x13f, 0x50051, 0xe, 0x141, 0x140, 0x0, 0x50051, 0xe, 0x142, 0x140, 0x1, 0x70050, 0x41, 0x143, 0x141, 0x142, 0x2e, 0x51, 0x50081, 0x41, 0x144, 0x48, 0x143, 0x50041, 0x5b, 0x145, 0x46, 0x19, 0x3003e, 0x145, 0x144, 0x200f9, 0x24, 0x200f8, 0x22, 0x300f7, 0x2a, 0x0, 0x400fa, 0x28, 0x29, 0x5e, 0x200f8, 0x5e, 0x300f7, 0x62, 0x0, 0x400fa, 0x60, 0x61, 0x62, 0x200f8, 0x61, 0x4003d, 0x9, 0x6c, 0x37, 0x50041, 0x3b, 0x6f, 0x6e, 0x6c, 0x4003d, 0xf, 0x70, 0x6f, 0x50081, 0xf, 0x71, 0x70, 0x3f, 0x3003e, 0x2c, 0x71, 0x50041, 0x3b, 0x76, 0x75, 0x6c, 0x4003d, 0xf, 0x77, 0x76, 0x50051, 0xe, 0x78, 0x77, 0x0, 0x50051, 0xe, 0x79, 0x77, 0x1, 0x60050, 0x52, 0x7a, 0x78, 0x79, 0x51, 0x50091, 0xf, 0x7b, 0x155, 0x7a, 0x50051, 0xe, 0x7c, 0x7b, 0x0, 0x50051, 0xe, 0x7d, 0x7b, 0x1, 0x70050, 0x41, 0x7e, 0x7c, 0x7d, 0x2e, 0x51, 0x50081, 0x41, 0x7f, 0x48, 0x7e, 0x50041, 0x5b, 0x80, 0x46, 0x19, 0x3003e, 0x80, 0x7f, 0x200f9, 0x24, 0x200f8, 0x62, 0x200f9, 0x2a, 0x200f8, 0x29, 0x4003d, 0x9, 0x38, 0x37, 0x50041, 0x3b, 0x3c, 0x3a, 0x38, 0x4003d, 0xf, 0x3d, 0x3c, 0x50081, 0xf, 0x40, 0x3d, 0x3f, 0x3003e, 0x2c, 0x40, 0x50041, 0x3b, 0x4f, 0x4e, 0x38, 0x4003d, 0xf, 0x50, 0x4f, 0x50051, 0xe, 0x53, 0x50, 0x0, 0x50051, 0xe, 0x54, 0x50, 0x1, 0x60050, 0x52, 0x55, 0x53, 0x54, 0x51, 0x50091, 0xf, 0x56, 0x155, 0x55, 0x50051, 0xe, 0x57, 0x56, 0x0, 0x50051, 0xe, 0x58, 0x56, 0x1, 0x70050, 0x41, 0x59, 0x57, 0x58, 0x2e, 0x51, 0x50081, 0x41, 0x5a, 0x48, 0x59, 0x50041, 0x5b, 0x5c, 0x46, 0x19, 0x3003e, 0x5c, 0x5a, 0x200f9, 0x24, 0x200f8, 0x2a, 0x300f7, 0x85, 0x0, 0x700fb, 0x25, 0x84, 0x1, 0x82, 0x2, 0x83, 0x200f8, 0x83, 0x4003d, 0x9, 0xa0, 0x37, 0x50041, 0x3b, 0xa2, 0xa1, 0xa0, 0x4003d, 0xf, 0xa3, 0xa2, 0x50081, 0xf, 0xa4, 0xa3, 0x3f, 0x3003e, 0x2c, 0xa4, 0x50041, 0x3b, 0xa9, 0xa8, 0xa0, 0x4003d, 0xf, 0xaa, 0xa9, 0x50051, 0xe, 0xab, 0xaa, 0x0, 0x50051, 0xe, 0xac, 0xaa, 0x1, 0x60050, 0x52, 0xad, 0xab, 0xac, 0x51, 0x50091, 0xf, 0xae, 0x155, 0xad, 0x50051, 0xe, 0xaf, 0xae, 0x0, 0x50051, 0xe, 0xb0, 0xae, 0x1, 0x70050, 0x41, 0xb1, 0xaf, 0xb0, 0x2e, 0x51, 0x50081, 0x41, 0xb2, 0x48, 0xb1, 0x50041, 0x5b, 0xb3, 0x46, 0x19, 0x3003e, 0xb3, 0xb2, 0x200f9, 0x85, 0x200f8, 0x82, 0x4003d, 0x9, 0x88, 0x37, 0x50041, 0x3b, 0x8a, 0x89, 0x88, 0x4003d, 0xf, 0x8b, 0x8a, 0x50081, 0xf, 0x8c, 0x8b, 0x3f, 0x3003e, 0x2c, 0x8c, 0x50041, 0x3b, 0x91, 0x90, 0x88, 0x4003d, 0xf, 0x92, 0x91, 0x50051, 0xe, 0x93, 0x92, 0x0, 0x50051, 0xe, 0x94, 0x92, 0x1, 0x60050, 0x52, 0x95, 0x93, 0x94, 0x51, 0x50091, 0xf, 0x96, 0x155, 0x95, 0x50051, 0xe, 0x97, 0x96, 0x0, 0x50051, 0xe, 0x98, 0x96, 0x1, 0x70050, 0x41, 0x99, 0x97, 0x98, 0x2e, 0x51, 0x50081, 0x41, 0x9a, 0x48, 0x99, 0x50041, 0x5b, 0x9b, 0x46, 0x19, 0x3003e, 0x9b, 0x9a, 0x200f9, 0x85, 0x200f8, 0x84, 0x4003d, 0x9, 0xb7, 0x37, 0x50087, 0x9, 0xb9, 0xb7, 0xb8, 0x4007c, 0x6, 0xba, 0xb9, 0x40070, 0xe, 0xbf, 0xba, 0x40070, 0xe, 0xc0, 0x25, 0x50088, 0xe, 0xc1, 0xbf, 0xc0, 0x50085, 0xe, 0xc2, 0xbd, 0xc1, 0x6000c, 0xe, 0xc5, 0x1, 0xd, 0xc2, 0x6000c, 0xe, 0xc7, 0x1, 0xe, 0xc2, 0x4007f, 0xe, 0xc8, 0xc7, 0x50050, 0xf, 0xc9, 0xc5, 0xc8, 0x5008e, 0xf, 0xca, 0xc9, 0x3e, 0x50080, 0x6, 0xcd, 0xba, 0x42, 0x40070, 0xe, 0xce, 0xcd, 0x50088, 0xe, 0xd0, 0xce, 0xc0, 0x50085, 0xe, 0xd1, 0xbd, 0xd0, 0x6000c, 0xe, 0xd4, 0x1, 0xd, 0xd1, 0x6000c, 0xe, 0xd6, 0x1, 0xe, 0xd1, 0x4007f, 0xe, 0xd7, 0xd6, 0x50050, 0xf, 0xd8, 0xd4, 0xd7, 0x5008e, 0xf, 0xd9, 0xd8, 0x3e, 0x60050, 0x2d, 0xde, 0xdb, 0xca, 0xd9, 0x3003e, 0xda, 0xde, 0x5008b, 0x9, 0xe0, 0xb7, 0xb8, 0x50041, 0x3b, 0xe1, 0xda, 0xe0, 0x4003d, 0xf, 0xe2, 0xe1, 0x50081, 0xf, 0xe3, 0xe2, 0x3f, 0x3003e, 0x2c, 0xe3, 0x4003d, 0xf, 0xe9, 0xe1, 0x50051, 0xe, 0xea, 0xe9, 0x0, 0x50051, 0xe, 0xeb, 0xe9, 0x1, 0x60050, 0x52, 0xec, 0xea, 0xeb, 0x51, 0x50091, 0xf, 0xed, 0x155, 0xec, 0x50051, 0xe, 0xee, 0xed, 0x0, 0x50051, 0xe, 0xef, 0xed, 0x1, 0x70050, 0x41, 0xf0, 0xee, 0xef, 0x2e, 0x51, 0x50081, 0x41, 0xf1, 0x48, 0xf0, 0x50041, 0x5b, 0xf2, 0x46, 0x19, 0x3003e, 0xf2, 0xf1, 0x200f9, 0x85, 0x200f8, 0x85, 0x200f9, 0x24, 0x200f8, 0x24, 0xd00f5, 0x27, 0x157, 0x14a, 0x148, 0x14d, 0x29, 0x14d, 0x61, 0x14d, 0x85, 0x14a, 0x23, 0x300f7, 0x14e, 0x0, 0x400fa, 0x157, 0x147, 0x14e, 0x200f8, 0x14e, 0x200f9, 0x147, 0x200f8, 0x147, 0x100fd, 0x10038}}
	layout = &vxr.ShaderLayout{EntryPoints:map[string]vxr.ShaderEntryPointLayout{"main":vxr.ShaderEntryPointVertexLayout{Name:"main"}}, PushConstants:struct { Offset uint32; Size uint32 }{Offset:0x0, Size:0x0}, DescriptorSetLayouts:[][]struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{[]struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{DescriptorType:0x7, DescriptorCount:vxr.ShaderConstant{Value:0x1, IsSpecConstant:false}}}}}
	meta = &vxr.ShaderMetadata{SpecConstants:[]struct { Name string; Default uint32 }{struct { Name string; Default uint32 }{Name:"polygonMode", Default:0x0}, struct { Name string; Default uint32 }{Name:"triangleCount", Default:0x1}}, DescriptorSetBindings:map[string]vxr.ShaderBindingMetadata{"Objects":vxr.ShaderBindingTypeBufferMetadata{ShaderBindingInfo:vxr.ShaderBindingInfo{DescriptorType:0x7, Set:0, Binding:0}, Size:0x0, RuntimeArrayStride:0x1c}}}
	return
}
