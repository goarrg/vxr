// go run goarrg.com/rhi/vxr/cmd/vxrc -id-prefix=vxr/shapes/ -dir=./ -generator=go -O -Os -strip pipeline_linestrip.vert 
// Code generated by the command above; DO NOT EDIT.

package shapes

import(
	"goarrg.com/rhi/vxr"
)

func vxrcLoad_pipeline_linestrip_vert() (spv *vxr.Shader, layout *vxr.ShaderLayout, meta *vxr.ShaderMetadata) {
	spv = &vxr.Shader{ID:"vxr/shapes/pipeline_linestrip.vert", SPIRV:[]uint32{0x7230203, 0x10600, 0xd000b, 0x23, 0x0, 0x20011, 0x1, 0x6000b, 0x1, 0x4c534c47, 0x6474732e, 0x3035342e, 0x0, 0x3000e, 0x0, 0x1, 0x8000f, 0x0, 0x4, 0x6e69616d, 0x0, 0xd, 0x15, 0x17, 0x30047, 0xb, 0x2, 0x50048, 0xb, 0x0, 0xb, 0x0, 0x50048, 0xb, 0x1, 0xb, 0x1, 0x50048, 0xb, 0x2, 0xb, 0x3, 0x50048, 0xb, 0x3, 0xb, 0x4, 0x50048, 0x11, 0x0, 0x23, 0x0, 0x40047, 0x12, 0x6, 0x8, 0x30047, 0x13, 0x2, 0x40048, 0x13, 0x0, 0x13, 0x40048, 0x13, 0x0, 0x18, 0x50048, 0x13, 0x0, 0x23, 0x0, 0x30047, 0x15, 0x13, 0x30047, 0x15, 0x18, 0x40047, 0x15, 0x21, 0x0, 0x40047, 0x15, 0x22, 0x0, 0x40047, 0x17, 0xb, 0x2a, 0x20013, 0x2, 0x30021, 0x3, 0x2, 0x30016, 0x6, 0x20, 0x40017, 0x7, 0x6, 0x4, 0x40015, 0x8, 0x20, 0x0, 0x4002b, 0x8, 0x9, 0x1, 0x4001c, 0xa, 0x6, 0x9, 0x6001e, 0xb, 0x7, 0x6, 0xa, 0xa, 0x40020, 0xc, 0x3, 0xb, 0x4003b, 0xc, 0xd, 0x3, 0x40015, 0xe, 0x20, 0x1, 0x4002b, 0xe, 0xf, 0x0, 0x40017, 0x10, 0x6, 0x2, 0x3001e, 0x11, 0x10, 0x3001d, 0x12, 0x11, 0x3001e, 0x13, 0x12, 0x40020, 0x14, 0xc, 0x13, 0x4003b, 0x14, 0x15, 0xc, 0x40020, 0x16, 0x1, 0xe, 0x4003b, 0x16, 0x17, 0x1, 0x40020, 0x19, 0xc, 0x10, 0x4002b, 0x6, 0x1c, 0x0, 0x4002b, 0x6, 0x1d, 0x3f800000, 0x40020, 0x21, 0x3, 0x7, 0x50036, 0x2, 0x4, 0x0, 0x3, 0x200f8, 0x5, 0x4003d, 0xe, 0x18, 0x17, 0x70041, 0x19, 0x1a, 0x15, 0xf, 0x18, 0xf, 0x4003d, 0x10, 0x1b, 0x1a, 0x50051, 0x6, 0x1e, 0x1b, 0x0, 0x50051, 0x6, 0x1f, 0x1b, 0x1, 0x70050, 0x7, 0x20, 0x1e, 0x1f, 0x1c, 0x1d, 0x50041, 0x21, 0x22, 0xd, 0xf, 0x3003e, 0x22, 0x20, 0x100fd, 0x10038}}
	layout = &vxr.ShaderLayout{EntryPoints:map[string]vxr.ShaderEntryPointLayout{"main":vxr.ShaderEntryPointVertexLayout{Name:"main"}}, PushConstants:struct { Offset uint32; Size uint32 }{Offset:0x0, Size:0x0}, DescriptorSetLayouts:[][]struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{[]struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{DescriptorType:0x7, DescriptorCount:vxr.ShaderConstant{Value:0x1, IsSpecConstant:false}}}}}
	meta = &vxr.ShaderMetadata{SpecConstants:[]struct { Name string; Default uint32 }(nil), DescriptorSetBindings:map[string]vxr.ShaderBindingMetadata{"Objects":vxr.ShaderBindingTypeBufferMetadata{ShaderBindingInfo:vxr.ShaderBindingInfo{DescriptorType:0x7, Set:0, Binding:0}, Size:0x0, RuntimeArrayStride:0x8}}}
	return
}
