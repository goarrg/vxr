// go run goarrg.com/rhi/vxr/cmd/vxrc -id-prefix=vxr/shapes/ -dir=./ -generator=go -O -Os -strip main.comp 
// Code generated by the command above; DO NOT EDIT.

package shapes

import(
	"goarrg.com/rhi/vxr"
)

func vxrcLoad_main_comp() (spv *vxr.Shader, layout *vxr.ShaderLayout, meta *vxr.ShaderMetadata) {
	spv = &vxr.Shader{ID:"vxr/shapes/main.comp", SPIRV:[]uint32{0x7230203, 0x10600, 0xd000b, 0x14f, 0x0, 0x20011, 0x1, 0x6000b, 0x1, 0x4c534c47, 0x6474732e, 0x3035342e, 0x0, 0x3000e, 0x0, 0x1, 0x8000f, 0x5, 0x4, 0x6e69616d, 0x0, 0xe, 0x1b, 0x42, 0x6014b, 0x4, 0x26, 0x7, 0x8, 0x9, 0x40047, 0x7, 0x1, 0x0, 0x40047, 0x8, 0x1, 0x1, 0x40047, 0x9, 0x1, 0x2, 0x40047, 0xe, 0xb, 0x1c, 0x50048, 0x17, 0x0, 0x23, 0x0, 0x50048, 0x17, 0x1, 0x23, 0x4, 0x50048, 0x17, 0x2, 0x23, 0x8, 0x50048, 0x17, 0x3, 0x23, 0xc, 0x50048, 0x17, 0x4, 0x23, 0x10, 0x50048, 0x17, 0x5, 0x23, 0x14, 0x40048, 0x17, 0x6, 0x4, 0x50048, 0x17, 0x6, 0x7, 0xc, 0x50048, 0x17, 0x6, 0x23, 0x18, 0x40047, 0x18, 0x6, 0x30, 0x30047, 0x19, 0x2, 0x40048, 0x19, 0x0, 0x13, 0x40048, 0x19, 0x0, 0x18, 0x50048, 0x19, 0x0, 0x23, 0x0, 0x40048, 0x19, 0x1, 0x13, 0x40048, 0x19, 0x1, 0x18, 0x50048, 0x19, 0x1, 0x23, 0x4, 0x30047, 0x1b, 0x13, 0x30047, 0x1b, 0x18, 0x40047, 0x1b, 0x21, 0x0, 0x40047, 0x1b, 0x22, 0x0, 0x40047, 0x3d, 0x6, 0x8, 0x50048, 0x3e, 0x0, 0x23, 0x0, 0x50048, 0x3e, 0x1, 0x23, 0x4, 0x40047, 0x3f, 0x6, 0x1c, 0x30047, 0x40, 0x2, 0x40048, 0x40, 0x0, 0x13, 0x40048, 0x40, 0x0, 0x19, 0x50048, 0x40, 0x0, 0x23, 0x0, 0x30047, 0x42, 0x13, 0x30047, 0x42, 0x19, 0x40047, 0x42, 0x21, 0x1, 0x40047, 0x42, 0x22, 0x0, 0x20013, 0x2, 0x30021, 0x3, 0x2, 0x40015, 0x6, 0x20, 0x0, 0x40032, 0x6, 0x7, 0x1, 0x40032, 0x6, 0x8, 0x1, 0x40032, 0x6, 0x9, 0x1, 0x40017, 0xc, 0x6, 0x3, 0x40020, 0xd, 0x1, 0xc, 0x4003b, 0xd, 0xe, 0x1, 0x4002b, 0x6, 0xf, 0x0, 0x40020, 0x10, 0x1, 0x6, 0x30016, 0x14, 0x20, 0x40017, 0x15, 0x14, 0x2, 0x40018, 0x16, 0x15, 0x3, 0x9001e, 0x17, 0x6, 0x6, 0x6, 0x6, 0x14, 0x6, 0x16, 0x3001d, 0x18, 0x17, 0x4001e, 0x19, 0x6, 0x18, 0x40020, 0x1a, 0xc, 0x19, 0x4003b, 0x1a, 0x1b, 0xc, 0x40015, 0x1c, 0x20, 0x1, 0x4002b, 0x1c, 0x1d, 0x0, 0x40020, 0x1e, 0xc, 0x6, 0x20014, 0x21, 0x9001e, 0x26, 0x6, 0x6, 0x6, 0x6, 0x14, 0x6, 0x16, 0x4002b, 0x1c, 0x29, 0x1, 0x40020, 0x2b, 0xc, 0x17, 0x4002b, 0x6, 0x31, 0x7fffffff, 0x4002b, 0x6, 0x39, 0x3, 0x4001c, 0x3d, 0x15, 0x39, 0x4001e, 0x3e, 0x6, 0x3d, 0x3001d, 0x3f, 0x3e, 0x3001e, 0x40, 0x3f, 0x40020, 0x41, 0xc, 0x40, 0x4003b, 0x41, 0x42, 0xc, 0x4001c, 0x46, 0x15, 0x39, 0x4002b, 0x14, 0x47, 0x0, 0x4002b, 0x14, 0x48, 0xbf000000, 0x5002c, 0x15, 0x49, 0x47, 0x48, 0x4002b, 0x14, 0x4a, 0x3eddb37d, 0x4002b, 0x14, 0x4b, 0x3e800000, 0x5002c, 0x15, 0x4c, 0x4a, 0x4b, 0x4002b, 0x14, 0x4d, 0xbeddb37d, 0x5002c, 0x15, 0x4e, 0x4d, 0x4b, 0x6002c, 0x46, 0x4f, 0x49, 0x4c, 0x4e, 0x4001e, 0x50, 0x6, 0x46, 0x40020, 0x52, 0xc, 0x3e, 0x4002b, 0x6, 0x58, 0x4, 0x4002b, 0x14, 0x5f, 0xbeb504f3, 0x5002c, 0x15, 0x60, 0x5f, 0x5f, 0x4002b, 0x14, 0x61, 0x3eb504f3, 0x5002c, 0x15, 0x62, 0x61, 0x5f, 0x5002c, 0x15, 0x63, 0x61, 0x61, 0x6002c, 0x46, 0x64, 0x60, 0x62, 0x63, 0x4002b, 0x6, 0x6a, 0x1, 0x5002c, 0x15, 0x6d, 0x5f, 0x61, 0x6002c, 0x46, 0x6e, 0x63, 0x6d, 0x60, 0x4002b, 0x14, 0x7c, 0x3f000000, 0x5002c, 0x15, 0x7d, 0x7c, 0x7c, 0x5002c, 0x15, 0x7e, 0x48, 0x7c, 0x6002c, 0x46, 0x7f, 0x49, 0x7d, 0x7e, 0x5002c, 0x15, 0x87, 0x48, 0x48, 0x5002c, 0x15, 0x88, 0x7c, 0x48, 0x6002c, 0x46, 0x89, 0x87, 0x88, 0x7d, 0x6002c, 0x46, 0x91, 0x7d, 0x7e, 0x87, 0x4002b, 0x14, 0x98, 0x40c90fdb, 0x5002c, 0x15, 0xc7, 0x47, 0x47, 0x4002b, 0x6, 0x107, 0x2, 0x4002b, 0x14, 0x14e, 0xc0490fdb, 0x50036, 0x2, 0x4, 0x0, 0x3, 0x200f8, 0x5, 0x300f7, 0x138, 0x0, 0x300fb, 0xf, 0x139, 0x200f8, 0x139, 0x50041, 0x10, 0x11, 0xe, 0xf, 0x4003d, 0x6, 0x12, 0x11, 0x50041, 0x1e, 0x1f, 0x1b, 0x1d, 0x4003d, 0x6, 0x20, 0x1f, 0x500ae, 0x21, 0x22, 0x12, 0x20, 0x300f7, 0x24, 0x0, 0x400fa, 0x22, 0x23, 0x24, 0x200f8, 0x23, 0x200f9, 0x138, 0x200f8, 0x24, 0x60041, 0x2b, 0x2c, 0x1b, 0x29, 0x12, 0x4003d, 0x17, 0x2d, 0x2c, 0x40190, 0x26, 0x2e, 0x2d, 0x50051, 0x6, 0x144, 0x2e, 0x0, 0x50051, 0x6, 0x145, 0x2e, 0x1, 0x50051, 0x6, 0x146, 0x2e, 0x2, 0x50051, 0x14, 0x147, 0x2e, 0x4, 0x500c7, 0x6, 0x32, 0x144, 0x31, 0x300f7, 0x35, 0x0, 0x700fb, 0x32, 0x35, 0x0, 0x33, 0x1, 0x34, 0x200f8, 0x33, 0x500aa, 0x21, 0x3a, 0x146, 0x39, 0x300f7, 0x3c, 0x0, 0x400fa, 0x3a, 0x3b, 0x55, 0x200f8, 0x3b, 0x50050, 0x50, 0x51, 0x12, 0x4f, 0x60041, 0x52, 0x53, 0x42, 0x1d, 0x145, 0x40190, 0x3e, 0x54, 0x51, 0x3003e, 0x53, 0x54, 0x200f9, 0x3c, 0x200f8, 0x55, 0x500aa, 0x21, 0x59, 0x146, 0x58, 0x300f7, 0x5b, 0x0, 0x400fa, 0x59, 0x5a, 0x72, 0x200f8, 0x5a, 0x50050, 0x50, 0x65, 0x12, 0x64, 0x60041, 0x52, 0x66, 0x42, 0x1d, 0x145, 0x40190, 0x3e, 0x67, 0x65, 0x3003e, 0x66, 0x67, 0x50080, 0x6, 0x6b, 0x145, 0x6a, 0x50050, 0x50, 0x6f, 0x12, 0x6e, 0x60041, 0x52, 0x70, 0x42, 0x1d, 0x6b, 0x40190, 0x3e, 0x71, 0x6f, 0x3003e, 0x70, 0x71, 0x200f9, 0x5b, 0x200f8, 0x72, 0x300f7, 0x78, 0x0, 0x700fb, 0x146, 0x77, 0x1, 0x75, 0x2, 0x76, 0x200f8, 0x77, 0x40070, 0x14, 0x9b, 0x146, 0x200f9, 0xa8, 0x200f8, 0xa8, 0x700f5, 0x15, 0x14b, 0x49, 0x77, 0xc1, 0xa9, 0x700f5, 0x6, 0x14a, 0xf, 0x77, 0xd0, 0xa9, 0x500b0, 0x21, 0xb0, 0x14a, 0x146, 0x400f6, 0xaa, 0xa9, 0x0, 0x400fa, 0xb0, 0xa9, 0xaa, 0x200f8, 0xa9, 0x50080, 0x6, 0xb3, 0x14a, 0x6a, 0x40070, 0x14, 0xb4, 0xb3, 0x50088, 0x14, 0xb8, 0xb4, 0x9b, 0x50085, 0x14, 0xb9, 0x98, 0xb8, 0x6000c, 0x14, 0xbc, 0x1, 0xd, 0xb9, 0x6000c, 0x14, 0xbe, 0x1, 0xe, 0xb9, 0x4007f, 0x14, 0xbf, 0xbe, 0x50050, 0x15, 0xc0, 0xbc, 0xbf, 0x5008e, 0x15, 0xc1, 0xc0, 0x7c, 0x50080, 0x6, 0xc5, 0x145, 0x14a, 0x60050, 0x46, 0xca, 0xc7, 0x14b, 0xc1, 0x50050, 0x50, 0xcb, 0x12, 0xca, 0x60041, 0x52, 0xcc, 0x42, 0x1d, 0xc5, 0x40190, 0x3e, 0xcd, 0xcb, 0x3003e, 0xcc, 0xcd, 0x50080, 0x6, 0xd0, 0x14a, 0x29, 0x200f9, 0xa8, 0x200f8, 0xaa, 0x200f9, 0x78, 0x200f8, 0x75, 0x50050, 0x50, 0x80, 0x12, 0x7f, 0x60041, 0x52, 0x81, 0x42, 0x1d, 0x145, 0x40190, 0x3e, 0x82, 0x80, 0x3003e, 0x81, 0x82, 0x200f9, 0x78, 0x200f8, 0x76, 0x50050, 0x50, 0x8a, 0x12, 0x89, 0x60041, 0x52, 0x8b, 0x42, 0x1d, 0x145, 0x40190, 0x3e, 0x8c, 0x8a, 0x3003e, 0x8b, 0x8c, 0x50080, 0x6, 0x8f, 0x145, 0x6a, 0x50050, 0x50, 0x92, 0x12, 0x91, 0x60041, 0x52, 0x93, 0x42, 0x1d, 0x8f, 0x40190, 0x3e, 0x94, 0x92, 0x3003e, 0x93, 0x94, 0x200f9, 0x78, 0x200f8, 0x78, 0x200f9, 0x5b, 0x200f8, 0x5b, 0x200f9, 0x3c, 0x200f8, 0x3c, 0x200f9, 0x35, 0x200f8, 0x34, 0x40070, 0x14, 0xd7, 0x146, 0x50088, 0x14, 0xd9, 0x14e, 0xd7, 0x6000c, 0x14, 0xdc, 0x1, 0xd, 0xd9, 0x6000c, 0x14, 0xde, 0x1, 0xe, 0xd9, 0x4007f, 0x14, 0xdf, 0xde, 0x50050, 0x15, 0xe0, 0xdc, 0xdf, 0x50085, 0x14, 0xe4, 0x7c, 0x147, 0x5008e, 0x15, 0xe5, 0xe0, 0xe4, 0x200f9, 0xe7, 0x200f8, 0xe7, 0x700f5, 0x15, 0x149, 0xe5, 0x34, 0x103, 0xe8, 0x700f5, 0x6, 0x148, 0xf, 0x34, 0x131, 0xe8, 0x500b0, 0x21, 0xef, 0x148, 0x146, 0x400f6, 0xe9, 0xe8, 0x0, 0x400fa, 0xef, 0xe8, 0xe9, 0x200f8, 0xe8, 0x40070, 0x14, 0xf2, 0x148, 0x50081, 0x14, 0xf3, 0xf2, 0x7c, 0x50085, 0x14, 0xf4, 0x98, 0xf3, 0x50088, 0x14, 0xf8, 0xf4, 0xd7, 0x6000c, 0x14, 0xfb, 0x1, 0xd, 0xf8, 0x6000c, 0x14, 0xfd, 0x1, 0xe, 0xf8, 0x4007f, 0x14, 0xfe, 0xfd, 0x50050, 0x15, 0xff, 0xfb, 0xfe, 0x5008e, 0x15, 0x103, 0xff, 0xe4, 0x50084, 0x6, 0x108, 0x148, 0x107, 0x50080, 0x6, 0x109, 0x145, 0x108, 0x60050, 0x46, 0x10d, 0xc7, 0x149, 0x103, 0x50050, 0x50, 0x10e, 0x12, 0x10d, 0x60041, 0x52, 0x10f, 0x42, 0x1d, 0x109, 0x40190, 0x3e, 0x110, 0x10e, 0x3003e, 0x10f, 0x110, 0x50088, 0x14, 0x117, 0xf2, 0xd7, 0x50085, 0x14, 0x118, 0x98, 0x117, 0x6000c, 0x14, 0x11b, 0x1, 0xd, 0x118, 0x6000c, 0x14, 0x11d, 0x1, 0xe, 0x118, 0x4007f, 0x14, 0x11e, 0x11d, 0x50050, 0x15, 0x11f, 0x11b, 0x11e, 0x5008e, 0x15, 0x120, 0x11f, 0x7c, 0x50080, 0x6, 0x126, 0x109, 0x6a, 0x60050, 0x46, 0x12b, 0x103, 0x149, 0x120, 0x50050, 0x50, 0x12c, 0x12, 0x12b, 0x60041, 0x52, 0x12d, 0x42, 0x1d, 0x126, 0x40190, 0x3e, 0x12e, 0x12c, 0x3003e, 0x12d, 0x12e, 0x50080, 0x6, 0x131, 0x148, 0x29, 0x200f9, 0xe7, 0x200f8, 0xe9, 0x200f9, 0x35, 0x200f8, 0x35, 0x200f9, 0x138, 0x200f8, 0x138, 0x100fd, 0x10038}}
	layout = &vxr.ShaderLayout{EntryPoints:map[string]vxr.ShaderEntryPointLayout{"main":vxr.ShaderEntryPointComputeLayout{Name:"main", LocalSize:[3]vxr.ShaderConstant{vxr.ShaderConstant{Value:0x0, IsSpecConstant:true}, vxr.ShaderConstant{Value:0x1, IsSpecConstant:true}, vxr.ShaderConstant{Value:0x2, IsSpecConstant:true}}}}, PushConstants:struct { Offset uint32; Size uint32 }{Offset:0x0, Size:0x0}, DescriptorSetLayouts:[][]struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{[]struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{DescriptorType:0x7, DescriptorCount:vxr.ShaderConstant{Value:0x1, IsSpecConstant:false}}, struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{DescriptorType:0x7, DescriptorCount:vxr.ShaderConstant{Value:0x1, IsSpecConstant:false}}}}}
	meta = &vxr.ShaderMetadata{SpecConstants:[]struct { Name string; Default uint32 }{struct { Name string; Default uint32 }{Name:"local_size_x", Default:0x1}, struct { Name string; Default uint32 }{Name:"local_size_y", Default:0x1}, struct { Name string; Default uint32 }{Name:"local_size_z", Default:0x1}}, DescriptorSetBindings:map[string]vxr.ShaderBindingMetadata{"Objects":vxr.ShaderBindingTypeBufferMetadata{ShaderBindingInfo:vxr.ShaderBindingInfo{DescriptorType:0x7, Set:0, Binding:0}, Size:0x4, RuntimeArrayStride:0x30}, "Triangles":vxr.ShaderBindingTypeBufferMetadata{ShaderBindingInfo:vxr.ShaderBindingInfo{DescriptorType:0x7, Set:0, Binding:1}, Size:0x0, RuntimeArrayStride:0x1c}}}
	return
}
